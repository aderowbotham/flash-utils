package com.aderowbotham.utils {	/**	 * @project com.aderowbotham.utils	 * @author Ade Rowbotham | www.aderowbotham.com	 * @copyright 2008	 **/	import flash.net.*;	import flash.events.*;		import com.aderowbotham.utils.CustomEvent;					public class XMLLoader extends EventDispatcher {									//XML data		private var xmlData:XML;		private var urlLoader:URLLoader;												public function XMLLoader(){						//trace("XMLLoader instantiated");								}												public function loadXML(xmlPath:String):void{						//trace("loadXML: "+xmlPath);						//specify the location of the xml			var urlRequest:URLRequest = new URLRequest(xmlPath);						//create an object that can load external text data			urlLoader = new URLLoader();						//register to be notified on complete			urlLoader.addEventListener(Event.COMPLETE, completeListener);						urlLoader.addEventListener(IOErrorEvent.IO_ERROR, onIOError);						//load the XML			urlLoader.load(urlRequest);					}														public function completeListener(e:Event):void{									xmlData = new XML(urlLoader.data);						//fire event			var thisEvent:CustomEvent = new CustomEvent("XMLEvent");			//send object containing message to appendData method of custom event			thisEvent.appendData({$description:"XML loaded successfully"});						dispatchEvent(thisEvent);					}				public function onIOError(e:Event):void{						//fire event			var thisEvent:CustomEvent = new CustomEvent("XMLEvent");			//send object containing message to appendData method of custom event			thisEvent.appendData({$description:"XML failed to load"});						dispatchEvent(thisEvent);					}								public function getXML():XML{			return xmlData;		}					}	}