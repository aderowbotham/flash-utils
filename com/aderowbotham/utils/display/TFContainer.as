package com.aderowbotham.utils.display {		/**	 * @project ajr_utils: TFContainer 	 * @author Ade Rowbotham | www.aderowbotham.com	 * @copyright 2008	 **/		import flash.text.TextFieldAutoSize;		import flash.text.StyleSheet;		import flash.text.TextField;		import flash.display.Sprite;			 	 	 /*	  * /////////////////////////////////////////////	  * 	  * This class should be linked to a MovieClip in the library which 	  * itself contains a dynamic TextField with the name 'labelText'	  * 	  * !! FLA must be published with 'Automatically declare stage instances' disabled.	  * 	  * This allows a subset of fonts to be easily embedded into a reusable TextField	  * In order to save on your overall filesize	  * (e.g. UPPERCASE and Numberals only)	  * 	  * 	  * /////////////////////////////////////////////	  * It can be attached and used from within an FLA in the IDE as follows:	  * 	  * import com.aderowbotham.utils.display.TFContainer;	  * 	  * var tf:TFContainer = new TFContainer;	  * addChild(tf); 	  * 	  * 	  * 	  * /////////////////////////////////////////////	  * If the SWF is published as a remote asset library, it can be loaded	  * into your application as follows (example)	  * 	  * //[APPLICATION]	  * 	  * import com.aderowbotham.utils.LibraryAssetLoader;	  * 	  * ...	  * 	  * assetLibrary = new LibraryAssetLoader("library.swf");	  * 	  * ///...then when swf is loaded	  * var tf:TFContainer = assetLibrary.getCustomMember("com.aderowbotham.utils.display.TFContainer");	  * addChild(tf); 	  * 	  * 	  * 	  * ///////////////////////////////////////////// 	  * It has some basic features (e.g.):	  * 	  * tf.setHTMLMode(true);	  * tf.setText("<span class='heading'>This is some HTML</span>"); 	  * 	  *  	  *  	  *  	  * To do more, get a direct reference to the TextField within. For example":	  * tf.getFieldRef().selectable = true;	  *  	  * 	  *  	  */	 	 	 	public class TFContainer extends Sprite {				public var labelText : TextField;		private var htmlMode:Boolean = false;		private var styleSheet:StyleSheet;		public function TFContainer() {						super();									labelText.autoSize = TextFieldAutoSize.LEFT;		}						public function setHTMLMode($bool:Boolean):void{						htmlMode = $bool;								}									public function setStyleSheet($ss : StyleSheet)	:void{			styleSheet = $ss;			labelText.styleSheet = styleSheet;		}			public function setText($text:String):void{			if(htmlMode){				labelText.htmlText = $text;			} else {				labelText.text = $text;			}		}				public function getFieldRef():TextField {			return labelText;		}					}}